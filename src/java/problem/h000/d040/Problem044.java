package problem.h000.d040;

import problem.Problem;
import util.Numbers;

/**
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
 * <p>
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * <p>
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
 * <p>
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
 * and D = |Pk − Pj| is minimised; what is the value of D?
 */
public class Problem044 implements Problem {
    @Override
    public long solve() {
        long result = 0;

        search:
        for (long i = 2; ; i++) {
            long pentagonalI = i * (3 * i - 1) / 2;

            for (long j = i; j >= 1; j--) {
                long pentagonalJ = j * (3 * j - 1) / 2;

                boolean sumIsPentagonal = Numbers.hasNaturalRoot(3, -1, -2 * (pentagonalI + pentagonalJ));
                boolean difIsPentagonal = Numbers.hasNaturalRoot(3, -1, -2 * (pentagonalI - pentagonalJ));

                if (difIsPentagonal && sumIsPentagonal) {
                    result = pentagonalI - pentagonalJ;
                    break search;
                }
            }
        }

        return result;
    }

    public static void main(String[] args) {
        System.out.println(new Problem044().solve());
    }

}
