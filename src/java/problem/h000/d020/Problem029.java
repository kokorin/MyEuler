package problem.h000.d020;

import problem.Problem;

import java.math.BigInteger;
import java.util.HashSet;
import java.util.Set;

/**
 * Consider all integer combinations of a<sup>b</sup> for 2 ? a ? 5 and 2 ? b ? 5:
 * <p>
 * 2<sup>2</sup>=4, 2<sup>3</sup>=8, 2<sup>4</sup>=16, 2<sup>5</sup>=32<br/>
 * 3<sup>2</sup>=9, 3<sup>3</sup>=27, 3<sup>4</sup>=81, 3<sup>5</sup>=243<br/>
 * 4<sup>2</sup>=16, 4<sup>3</sup>=64, 4<sup>4</sup>=256, 4<sup>5</sup>=1024<br/>
 * 5<sup>2</sup>=25, 5<sup>3</sup>=125, 5<sup>4</sup>=625, 5<sup>5</sup>=3125<br/>
 * <p>
 * If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
 * <p>
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 * <p>
 * How many distinct terms are in the sequence generated by a<sup>b</sup> for 2 ? a ? 100 and 2 ? b ? 100?
 */
public class Problem029 implements Problem {
    private static final int MAX_A = 100;
    private static final int MAX_B = 100;

    @Override
    public long solve() {
        Set<BigInteger> result = new HashSet<>();

        for (int a = 2; a <= MAX_A; a++) {
            for (int b = 2; b <= MAX_B; b++) {
                result.add(BigInteger.valueOf(a).pow(b));
            }
        }

        return result.size();
    }
}
